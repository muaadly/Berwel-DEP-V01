// Server Action to handle like toggle\n\'use server\';\n\nimport { createClient } from '@/utils/supabase/server'; // Import server-side client\nimport { revalidatePath } from \'next/cache\';\n\nexport async function toggleLikeAction(itemId: string, userId: string, isLiked: boolean) {\n  const supabase = createClient(); // Create server-side client\n\n  console.log(\"[Server Action] toggleLikeAction called:\", { itemId, userId, isLiked });\n\n  try {\n    if (isLiked) {\n      // Unlike the item\n      console.log(\'[Server Action] Attempting to unlike item:\', { userId, itemId });\n      const { error: unlikeError } = await supabase\n        .from(\'likes\')\n        .delete()\n        .eq(\'user_id\', userId)\n        .eq(\'item_id\', itemId);\n\n      if (unlikeError) {\n        console.error(\'[Server Action] Error unliking item:\', unlikeError);\n        return { success: false, error: unlikeError.message };\n      }\n\n      console.log(\'[Server Action] Unlike successful\');\n      // revalidatePath(\`/library/libyan-songs/${itemId}\`); // Consider revalidating if data changes\n      return { success: true };\n\n    } else {\n      // Like the item using the stored procedure\n      console.log(\'[Server Action] Attempting to like item via RPC:\', { userId, itemId });\n      const { error: likeError } = await supabase\n        .rpc(\'like_item\', {\n          p_user_id: userId,\n          p_item_id: itemId,\n          p_item_type: \'song\' // Assuming item_type is always \'song\' for this action\n        });\n\n      if (likeError) {\n        console.error(\'[Server Action] Error liking item via RPC:\', likeError);\n        return { success: false, error: likeError.message };\n      }\n\n      console.log(\'[Server Action] Like successful\');\n      // revalidatePath(\`/library/libyan-songs/${itemId}\`); // Consider revalidating if data changes\n      return { success: true };\n    }\n  } catch (catchError: any) {\n    console.error(\'[Server Action] Unexpected error:\', catchError);\n    return { success: false, error: catchError.message || \'An unexpected error occurred.\' };\n  }\n}\n\n// You might add other server actions here later 